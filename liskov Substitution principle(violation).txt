#include <iostream>
using namespace std;

class Rectangle
{
public:
    virtual void setWidth(int w) { width = w; }
    virtual void setHeight(int h) { height = h; }

    int getWidth() const { return width; }
    int getHeight() const { return height; }

    virtual int getArea() const { return width * height; }

private:
    int width = 0;
    int height = 0;
};

class Square : public Rectangle
{
public:
    // Square overrides setWidth and setHeight to enforce equal sides
    void setWidth(int w) override
    {
        Rectangle::setWidth(w);
        Rectangle::setHeight(w);
    }

    void setHeight(int h) override
    {
        Rectangle::setWidth(h);
        Rectangle::setHeight(h);
    }
};

void printArea(Rectangle &rect)
{
    rect.setWidth(5);
    rect.setHeight(10);
    cout << "Area: " << rect.getArea() << endl;
}

int main()
{
    Rectangle rect;
    Square sq;

    printArea(rect); // Output: Area: 50
    printArea(sq);   // Output: Area: 100 (violates LSP)

    return 0;
}
